# 1. Дано натуральное число n (n≤ 9).
# Напишите программу, которая печатает таблицу размером n×3 состоящую из данного числа (числа отделены одним пробелом).

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести таблицу размером n×3 состоящую из данного числа.
# Примечание. В конце строки может быть пробел.

num = int(input())
for _ in range(num):
    for _ in range(3):
        print(num, end=" ")
    print()

# or
for _ in range(num):
    print(num, num, num)


# 2. Дано натуральное число n (n≤ 9).
# Напишите программу, которая печатает таблицу размером n×5, где в i-ой строке указано число i (числа отделены одним пробелом).

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести таблицу размером n×5 в соответствии с условием.
# Примечание. В конце строки может быть пробел.

num = int(input())

for i in range(1, num + 1):
    print(i, i, i, i, i)

# or
for i in range(1, num + 1):
    for _ in range(5):
        print(i, end=" ")
    print()


# 3. Дано натуральное число n (n≤ 9).
# Напишите программу, которая печатает таблицу сложения для всех чисел от 1 до n в соответствии с примером.

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести таблицу сложения для всех чисел от 1 до n.
# Примечание. В конце строки может быть пробел.

num = int(input())
for number_1 in range(1, num + 1):
    for number_2 in range(1, 10):
        print(f"{number_1} + {number_2} = {number_1 + number_2}")
    print()

# 4. Дано натуральное число n. Напишите программу, которая печатает численный треугольник в соответствии с примером:
# 1
# 22
# 333
# 4444
# 55555
# ...

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
# Примечание. Используйте вложенный цикл for.

num = int(input())
for i in range(1, num + 1):
    for j in range(i):
        print(i, end="")
    print()


# 5. Дано нечетное натуральное число n.
# Напишите программу, которая печатает равнобедренный звездный треугольник с основанием, равным n в соответствии с примером:
#
# *
# **
# ***
# ****
# ***
# **
# *

# Формат входных данных
# На вход программе подается одно нечетное натуральное число.

# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
# Примечание. Используйте вложенный цикл for.

# просто какое-то извращение, но работает. Обязательно переделаю.
num = int(input())
for i in range(num // 2):
    for j in range(i + 1):
        print("*", end=" ")
    print()
for i in range(num // 2 + 1, 0, -1):
    for j in range(i):
        print("*", end=" ")
    print()


# 6. Дано натуральное число n.
# Напишите программу, которая печатает численный треугольник с высотой равной n, в соответствии с примером:

# 1
# 2 3
# 4 5 6
# 7 8 9 10
# 11 12 13 14 15
# 16 17 18 19 20 21
# ...

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.

# Примечание. Используйте вложенный цикл for.

num = int(input())
counter = 1
for row in range(1, num + 1):
    for col in range(row):
        print(counter, end=" ")
        counter = counter + 1
    print()


# 7. Дано натуральное число n.
# Напишите программу, которая печатает численный треугольник с высотой равной n, в соответствии с примером:

# 1
# 121
# 12321
# 1234321
# 123454321
# ...

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.

# Примечание. Используйте вложенный цикл for.

num = int(input())
for i in range(1, num + 1):
    for j in range(1, i):
        print(j, end="")
    for k in range(i, 0, -1):
        print(k, end="")
    print()


# 8. На вход программе подается два натуральных числа a и b (a< b).
# Напишите программу, которая находит натуральное число из отрезка [a;b] с максимальной суммой делителей.

# Формат входных данных
# На вход программе подаются два числа, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести два числа на одной строке, разделенных пробелом: число с максимальной суммой делителей и сумму его делителей.

# Примечание. Если таких чисел несколько, то выведите наибольшее из них.

a, b = int(input()), int(input())
max_total = 0
max_number = 0
for i in range(a, b + 1):
    counter = 0
    total = 0
    for j in range(1, b + 1):
        if i % j == 0:
            counter = counter + 1
            total = total + j
    if total >= max_total:
        max_number = i
        max_total = total
    # print(f"{i} : {counter}, {total}")
print(max_number, max_total)


# 9. На вход программе подается натуральное число n.
# Напишите программу, выводящую графическое изображение делимости чисел от 1 до n включительно.
# В каждой строке надо напечатать очередное число и столько символов «+», сколько делителей у этого числа.

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести графическое изображение чисел от 1 до n, каждое на отдельной строке.

num = int(input())
for i in range(1, num + 1):
    counter = 0
    for j in range(1, num + 1):
        if i % j == 0:
            counter = counter + 1
    print(f"{i}{'+' * counter}")


# 10. На вход программе подается натуральное число n.
# Напишите программу, которая находит цифровой корень данного числа.
# Цифровой корень числа n получается следующим образом: если сложить все цифры этого числа, затем все цифры найденной суммы и повторить этот процесс, то в результате будет получено однозначное число (цифра), которое и называется цифровым корнем данного числа.

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести цифровой корень введенного числа.

# Примечание. Используйте вложенные циклы while.

num = int(input())
if num < 10:
    print(num)
else:
    digital_root = 0
    while num != 0:
        last_digit = num % 10
        digital_root = digital_root + last_digit
        num = num // 10

        if num == 0 and digital_root > 9:
            num, digital_root = digital_root, num
    print(digital_root)


# 11. Дано натуральное число n.
# Напишите программу, которая выводит значение суммы 1!+2!+3!+…+n!.

# Формат входных данных
# На вход программе подается одно натуральное число.

# Формат выходных данных
# Программа должна вывести значение суммы 1!+2!+3!+…+n!.

# Примечание 1. Факториалом натурального числа n, называется произведение всех натуральных чисел от 1 до n, то есть n!=1⋅2⋅3⋅…⋅n

# Примечание 2. Задачу можно решить без вложенного цикла. Напишите две версии программы =)

num = int(input())
factorial = 1
total = 0
for number in range(1, num + 1):
    factorial = factorial * number
    total = total + factorial
print(total)


# 12. Подаются 2 числа a и b (a < b). Нужно вывести все простые числа, которые находятся в диапазоне [a, b].

a, b = int(input()), int(input())
for i in range(a, b + 1):
    counter = 0
    for j in range(1, b + 1):
        if i % j == 0:
            counter = counter + 1
    if counter == 2:
        print(i)

# or
a, b = int(input()), int(input())
for i in range(a, b + 1):
    if i > 1:
        for j in range(2, i):  #  когда i = 2, то цикл проигнорируется и произойдет вывод i - единственное четное число в последовательности
            if (i % j) == 0:
                break
        else:
            print(i)
